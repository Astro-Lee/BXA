name: Test XSpec
on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
 
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          # python-version: ${{ matrix.python-version }}

      - name: Set directory names
        run: |
          echo "MYCACHE=$HOME/Downloads/sherpa" >> $GITHUB_ENV
          echo "MODELDIR=$HOME/Downloads/models" >> $GITHUB_ENV

      - name: Cache heasoft modules
        uses: actions/cache@v2
        id: cache-downloads
        env:
          cache-name: cache-downloads
        with:
          path: ${{ env.HOME }}/Downloads/
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          conda install -c conda-forge ultranest coverage coveralls scipy matplotlib h5py astropy requests cython tqdm ghostscript
          [ -f conda-requirements.txt ] && pip install -r conda-requirements.txt
          mkdir -p $MYCACHE
          pushd $MYCACHE
      - name: Download and Install Sherpa (if necessary)
        run: |
            if ! ls -d $HOME/Downloads/ciao-install/ciao-*/bin/ciao_setup.sh; then
              echo "getting latest ciao installer";
              CIAO_INSTALL_URL=$(wget -q -O - https://cxc.cfa.harvard.edu/ciao/download/ciao_install.html|grep -o '[^"]*_install.cgi?standard=true');
              wget -O ./ciao-install https://cxc.cfa.harvard.edu/$CIAO_INSTALL_URL;
              wget -O - 'https://heasarc.gsfc.nasa.gov/cgi-bin/Tools/tarit/tarit.pl?mode=download&src_other_specify=&arch=ubuntu_2004&general=heasptools&general=heagen&xanadu=xspec' --header 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' --header 'Accept-Language: en-US' --header 'DNT: 1' --header 'Connection: keep-alive' --header 'Referer: https://heasarc.gsfc.nasa.gov/lheasoft/download.html' --header 'Upgrade-Insecure-Requests: 1' --header 'Sec-GPC: 1' | tar -xzf -
              echo "running ciao installer";
              echo $MYCACHE > ciao-installer-input;
              rm -rf $HOME/Downloads/ciao-install/;
              mkdir -vp $HOME/Downloads/ciao-install;
              echo $HOME/Downloads/ciao-install >> ciao-installer-input;
              echo n >> ciao-installer-input;
              echo n >> ciao-installer-input;
              echo n >> ciao-installer-input;
              echo n >> ciao-installer-input;
              echo n >> ciao-installer-input;
              cat ciao-installer-input;
              bash ciao-install < ciao-installer-input;
            fi
            ls $HOME/Downloads/ciao-install/;
            CIAO_INSTALL_DIR=`ls -d $HOME/Downloads/ciao-install/ciao-*/`;
            echo "install dir is: $CIAO_INSTALL_DIR";

      - name: Load Sherpa
        run: |
            source $CIAO_INSTALL_DIR/bin/ciao.sh;
            source $CIAO_INSTALL_DIR/bin/ciao_setup.sh;

      - name: Download models (if necessary)
        if: steps.cache-downloads.outputs.cache-hit != 'true'
        run: |
             mkdir -p $MODELDIR
             pushd $MODELDIR
             wget -q -nc https://zenodo.org/record/1169181/files/uxclumpy-cutoff.fits https://zenodo.org/record/1169181/files/uxclumpy-cutoff-omni.fits;
             popd

      - name: Prepare testing
        run: |
          cp .coveragerc docker/testsrc
          cp .coveragerc examples/sherpa
          cp .coveragerc examples/xspec
          pushd docker/testsrc
          'echo "backend: Agg" > matplotlibrc'
          ls 
          rm *.nh

      - name: Test helper scripts
        run: |
          coverage run -p ../../fixkeywords.py combined_src.pi combined_bkg.pi combined_src.rmf combined_src.arf
          coverage run -p ../../gal.py combined_src.pi
          ls combined_src.pi.nh
          coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi combined_src.pi || exit 1
          coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi || exit 1
          coverage run -p ../../autobackgroundmodel/fitbkg.py || true
          coverage run -p ../../gal.py || true
          coverage run -p ../../fixkeywords.py || true
          git checkout .
          popd

      - name: Test examples
        run: |
            pushd examples/sherpa;
            # install interpolation code first
            ls -d /usr/local/lib/python*;
            sudo ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy /usr/include/numpy;
            ls /usr/include/numpy/;
            git clone https://github.com/JohannesBuchner/npyinterp.git;
            pushd npyinterp; make; popd;
            # run examples
            PYTHONPATH=../../:${PYTHONPATH}:npyinterp/ LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:npyinterp/ bash -v runall.sh || exit 1;
            popd;

      - name: Run XAGNFitter
        run: |
            pushd docker/testsrc;
            PYTHONPATH=../../:$PYTHONPATH WITHAPEC=0 coverage run -p ../../examples/sherpa/xagnfitter.py || exit 1;
            ls;
            popd;

      - name: Install
        run: |
          python3 setup.py install --user
          wc -l examples/sherpa/.cover* examples/xspec/.cover* docker/testsrc/.cover* .cover* || true

      - name: Coverage report
        run: |
          coverage combine examples/sherpa examples/xspec docker/testsrc .
          coverage report

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
