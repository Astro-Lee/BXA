name: Test conda-based Sherpa
on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          channels: conda-forge, sherpa
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true
          mamba-version: "*"
 
      - name: Set directory names
        run: |
          echo "MODELDIR=$HOME/Downloads/models" >> $GITHUB_ENV

      - name: Cache
        uses: pat-s/always-upload-cache@v2.1.5
        id: cache-downloads
        env:
          cache-name: cache-downloads
        with:
          path: |
             ${{ env.HOME }}/Downloads/ 
              ~/conda_pkgs_dir
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          conda install -y ultranest coverage coveralls scipy matplotlib h5py astropy requests cython tqdm coverage sherpa

      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Conda list
        shell: pwsh
        run: conda list
      - name: Conda paths
        shell: bash -l {0}
        run: |
          echo $PATH
          ls $CONDA/bin/
          which coverage

      - name: Download models (if necessary)
        if: steps.cache-downloads.outputs.cache-hit != 'true'
        run: |
             mkdir -p $MODELDIR
             pushd $MODELDIR
             wget -q -nc https://zenodo.org/record/1169181/files/uxclumpy-cutoff.fits https://zenodo.org/record/1169181/files/uxclumpy-cutoff-omni.fits;
             popd

      - name: Prepare testing
        run: |
          cp .coveragerc docker/testsrc
          cp .coveragerc examples/sherpa
          cp .coveragerc examples/xspec
          pushd docker/testsrc
          echo "backend: Agg" > matplotlibrc
          ls 
          rm *.nh

      - name: Test helper scripts
        shell: bash -l {0}
        run: |
          pushd docker/testsrc
          coverage run -p ../../fixkeywords.py combined_src.pi combined_bkg.pi combined_src.rmf combined_src.arf
          coverage run -p ../../gal.py combined_src.pi
          ls combined_src.pi.nh
          coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi combined_src.pi || exit 1
          coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi || exit 1
          coverage run -p ../../autobackgroundmodel/fitbkg.py || true
          coverage run -p ../../gal.py || true
          coverage run -p ../../fixkeywords.py || true
          git checkout .
          popd

      - name: Test examples
        shell: bash -l {0}
        run: |
            pushd examples/sherpa;
            # install interpolation code first
            ls -d /usr/local/lib/python*;
            sudo ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy /usr/include/numpy;
            ls /usr/include/numpy/;
            git clone https://github.com/JohannesBuchner/npyinterp.git;
            pushd npyinterp; make; popd;
            # run examples
            PYTHONPATH=../../:${PYTHONPATH}:npyinterp/ LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:npyinterp/ bash -v runall.sh || exit 1;
            popd;

      - name: Run XAGNFitter
        shell: bash -l {0}
        run: |
            pushd docker/testsrc;
            PYTHONPATH=../../:$PYTHONPATH WITHAPEC=0 coverage run -p ../../examples/sherpa/xagnfitter.py || exit 1;
            ls;
            popd;

      - name: Install
        shell: bash -l {0}
        run: |
          pip install . --user
          wc -l examples/sherpa/.cover* examples/xspec/.cover* docker/testsrc/.cover* .cover* || true

      - name: Coverage report
        shell: bash -l {0}
        run: |
          coverage combine examples/sherpa examples/xspec docker/testsrc .
          coverage report

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
