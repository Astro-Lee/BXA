name: Test XSpec
on: [push]

jobs:
  Test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
 
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          # python-version: ${{ matrix.python-version }}

      - name: Set directory names
        run: |
          echo "MYCACHE=$HOME/Downloads/xspec" >> $GITHUB_ENV
          echo "MODELDIR=$HOME/Downloads/models" >> $GITHUB_ENV

      - name: Cache heasoft modules
        uses: actions/cache@v2
        id: cache-downloads
        env:
          cache-name: cache-downloads
        with:
          path: ${{ env.HOME }}/Downloads/
          key: ${{ runner.os }}-build-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          conda install -y -c conda-forge ultranest coverage coveralls scipy matplotlib h5py astropy requests cython tqdm
          [ -f conda-requirements.txt ] && pip install -r conda-requirements.txt
          mkdir -p $MYCACHE
          pushd $MYCACHE
      - name: Download and Install heasoft (if necessary)
        run: |
            if ! ls -d $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/; then
              rm -rf heasoft*/;
              wget -O - 'https://heasarc.gsfc.nasa.gov/cgi-bin/Tools/tarit/tarit.pl?mode=download&arch=src&src_pc_linux_ubuntu=Y&src_other_specify=&general=heasptools&general=heagen&xanadu=xspec' --header 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' --header 'Accept-Language: en-US' --header 'DNT: 1' --header 'Connection: keep-alive' --header 'Referer: https://heasarc.gsfc.nasa.gov/lheasoft/download.html' --header 'Upgrade-Insecure-Requests: 1' --header 'Sec-GPC: 1' --progress=dot:giga | tar -xzf -
              ls heasoft*;
              ls;
              echo "compiling xspec";
              sudo apt-get install -y gfortran build-essential cmake liblapack3 liblapack-dev libatlas3-base libatlas-base-dev libblas3 libblas-dev libreadline-dev;
              ls heasoft*;
              export XSPEC_BUILD_DIR=`ls -d heasoft-*/BUILD_DIR`;
              pushd $XSPEC_BUILD_DIR;
              mkdir -p $MYCACHE/xspec-install/;
              ./configure --prefix=$MYCACHE/xspec-install/ --with-components="Xspec" && make && make install | grep -v hd_install;
              ls $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/;
              popd;
            fi
      - name: Load heasoft
        run: |
            export HEADAS=`ls -d $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/`;
            ls $HEADAS;
            echo "loading xspec from " $HEADAS;
            source ${HEADAS}/headas-init.sh;
            echo "PYTHONPATH: $PYTHONPATH";
            echo "PATH: $PATH";
            python -c 'import xspec' || true;

      - name: Download models (if necessary)
        if: steps.cache-downloads.outputs.cache-hit != 'true'
        run: |
             mkdir -p $MODELDIR
             pushd $MODELDIR
             wget -q -nc https://zenodo.org/record/1169181/files/uxclumpy-cutoff.fits https://zenodo.org/record/1169181/files/uxclumpy-cutoff-omni.fits;
             popd

      - name: Prepare testing
        run: |
          cp .coveragerc docker/testsrc
          cp .coveragerc examples/sherpa
          cp .coveragerc examples/xspec
          pushd docker/testsrc
          echo "backend: Agg" > matplotlibrc
          ls 
          rm *.nh

      - name: Test helper scripts
        run: |
          coverage run -p ../../fixkeywords.py combined_src.pi combined_bkg.pi combined_src.rmf combined_src.arf
          coverage run -p ../../gal.py combined_src.pi
          ls combined_src.pi.nh
          coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi combined_src.pi || exit 1
          coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi || exit 1
          coverage run -p ../../autobackgroundmodel/fitbkg.py || true
          coverage run -p ../../gal.py || true
          coverage run -p ../../fixkeywords.py || true
          git checkout .
          popd

      - name: Test examples
        run: |
            pushd examples/xspec;
            PYTHONPATH=../../:$PYTHONPATH bash -v runall.sh || exit 1;
            ls;
            popd;

      - name: Install
        run: |
          python3 setup.py install --user
          wc -l examples/sherpa/.cover* examples/xspec/.cover* docker/testsrc/.cover* .cover* || true

      - name: Coverage report
        run: |
          coverage combine examples/sherpa examples/xspec docker/testsrc .
          coverage report

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
