language: python

os:
  - linux

# use Ubuntu 20.04 for xspec compat
dist: focal

python:
  - "3.6"
#  - "2.7"

env:
  - TOOL=xspec
#  - TOOL=xspec-docker
  - TOOL=sherpa

cache:
  directories:
    - $HOME/Downloads/sherpa
    - $HOME/Downloads/xspec
    - $HOME/Downloads/models

before_cache:
  - rm -f $HOME/Downloads/ciao-install-*
# mode=download src_other_specify= arch=ubuntu_2004 general=heasptools general=heagen xanadu=xspec

install:
  - export MYCACHE=$HOME/Downloads/$TOOL
  - mkdir -p $MYCACHE
  - pushd $MYCACHE
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      echo "getting latest ciao installer url"; 
      CIAO_INSTALL_URL=$(wget -q -O - https://cxc.cfa.harvard.edu/ciao/download/ciao_install.html|grep -o '[^"]*_install.cgi?standard=true');
      echo "it is at: $CIAO_INSTALL_URL";
    fi
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      echo "getting latest ciao installer";
      wget -O ./ciao-install https://cxc.cfa.harvard.edu/$CIAO_INSTALL_URL;
    fi
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      echo "running ciao installer";
      echo $MYCACHE > ciao-installer-input;
      echo $HOME/bin/ >> ciao-installer-input;
      echo n >> ciao-installer-input;
      echo n >> ciao-installer-input;
      echo n >> ciao-installer-input;
      bash ciao-install < ciao-installer-input;
    fi
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      CIAO_INSTALL_DIR=`ls -d $HOME/bin/ciao*`;
      echo "install dir is: $CIAO_INSTALL_DIR";
    fi
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      echo "loading ciao";
      source $CIAO_INSTALL_DIR/bin/ciao.sh;
      source $CIAO_INSTALL_DIR/bin/ciao_setup.sh;
    fi

  - |
    if [[ "$TOOL" == "xspec" ]]; then
      echo "getting latest heasoft bundle";
      #tar -tzf heasoft.tar.gz >/dev/null || wget -O heasoft.tar.gz 'https://heasarc.gsfc.nasa.gov/cgi-bin/Tools/tarit/tarit.pl?mode=download&src_other_specify=&arch=ubuntu_2004&general=heasptools&general=heagen&xanadu=xspec' --header 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' --header 'Accept-Language: en-US' --header 'DNT: 1' --header 'Connection: keep-alive' --header 'Referer: https://heasarc.gsfc.nasa.gov/lheasoft/download.html' --header 'Upgrade-Insecure-Requests: 1' --header 'Sec-GPC: 1' --progress=dot:giga
      tar -tzf heasoft-src.tar.gz >/dev/null || wget -O heasoft-src.tar.gz 'https://heasarc.gsfc.nasa.gov/cgi-bin/Tools/tarit/tarit.pl?mode=download&arch=src&src_pc_linux_ubuntu=Y&src_other_specify=&general=heasptools&general=heagen&xanadu=xspec' --header 'User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:84.0) Gecko/20100101 Firefox/84.0' --header 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' --header 'Accept-Language: en-US' --header 'DNT: 1' --header 'Connection: keep-alive' --header 'Referer: https://heasarc.gsfc.nasa.gov/lheasoft/download.html' --header 'Upgrade-Insecure-Requests: 1' --header 'Sec-GPC: 1' --progress=dot:giga
    fi
  - |
    if [[ "$TOOL" == "xspec" ]]; then
      echo "unpacking heasoft";
      rm -rf heasoft*/
      tar -xzf heasoft-src.tar.gz;
      ls heasoft*;
      ls;
    fi
  - |
    if [[ "$TOOL" == "xspec" ]]; then
      echo "compiling xspec";
      sudo apt-get install -y gfortran build-essential cmake liblapack3 liblapack-dev libatlas3-base libatlas-base-dev libblas3 libblas-dev libreadline8 libreadline-dev;
      ls heasoft*;
      XSPEC_BUILD_DIR=`ls -d heasoft-*/BUILD_DIR`;
      #XSPEC_BUILD_DIR=`ls -d heasoft-*/x86_64-pc-linux-gnu-libc*/BUILD_DIR`;
      pushd $XSPEC_BUILD_DIR;
      mkdir -p $MYCACHE/xspec-install/;
      ./configure --prefix=$MYCACHE/xspec-install/ --with-components="Xspec" && make && make install;
      ls $MYCACHE/xspec-install/heasoft-*/x86_64-pc-linux-gnu-libc*/;
      export HEADAS=`ls -d $MYCACHE/xspec-install/x86_64-pc-linux-gnu-libc*/`;
      ./configure;
      #export HEADAS=`ls -d $MYCACHE/heasoft-*/x86_64-pc-linux-gnu-libc*/`;
      popd;
    fi
  - |
    if [[ "$TOOL" == "xspec" ]]; then
      echo "loading xspec from " $HEADAS;
      source ${HEADAS}/headas-init.sh;
      python -c 'import xspec';
    fi
  - popd
  - mkdir -p $HOME/Downloads/models
  - pushd $HOME/Downloads/models
  - wget -q -nc https://zenodo.org/record/1169181/files/uxclumpy-cutoff.fits https://zenodo.org/record/1169181/files/uxclumpy-cutoff-omni.fits
  - export MODELDIR=$PWD
  - popd


  - sudo apt-get install -y python3-numpy python-numpy
  - pip install requests corner astropy h5py cython coveralls coverage scipy
  - pip install ultranest
  - python setup.py install

script:
  # testing scripts
  - pushd docker/testsrc
  - 'echo "backend: Agg" > matplotlibrc'
  - ls 
  - rm *.nh
  - coverage run -p ../../fixkeywords.py combined_src.pi combined_bkg.pi combined_src.rmf combined_src.arf
  - coverage run -p ../../gal.py combined_src.pi
  - if [[ "$TOOL" == "sherpa" ]]; then coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi combined_src.pi; fi
  - if [[ "$TOOL" == "xspec" ]]; then coverage run -p ../../autobackgroundmodel/fitbkg.py combined_bkg.pi; fi
  - if [[ "$TOOL" == "xspec" ]]; then coverage run -p ../../autobackgroundmodel/fitbkg.py; fi
  - if [[ "$TOOL" == "xspec" ]]; then coverage run -p ../../gal.py --help; fi
  - if [[ "$TOOL" == "xspec" ]]; then coverage run -p ../../fixkeywords.py; fi
  - git checkout .
  - popd

  # testing xspec examples
  - |
    if [[ "$TOOL" == "xspec" ]]; then
      pushd examples/xspec;
      # PYTHONPATH=../../:$PYTHONPATH bash runall.sh;
      popd;
    fi
  # testing sherpa examples
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      pushd examples/sherpa;
      # install interpolation code first
      ls -d /usr/local/lib/python*;
      sudo ln -s /usr/local/lib/python2.7/dist-packages/numpy/core/include/numpy /usr/include/numpy;
      ls /usr/include/numpy/;
      git clone https://github.com/JohannesBuchner/npyinterp.git;
      pushd npyinterp; make; popd;
      # run examples
      PYTHONPATH=../../:${PYTHONPATH}:npyinterp/ LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:npyinterp/ bash runall.sh;
      popd;
    fi
  - |
    if [[ "$TOOL" == "sherpa" ]]; then
      pushd docker/testsrc;
      PYTHONPATH=../../:$PYTHONPATH WITHAPEC=0 coverage run -p ../../examples/sherpa/xagnfitter.py;
      popd;
    fi
  # upload coverage results
  - coverage combine examples/sherpa examples/xspec docker/testsrc .

after_success: coveralls
